name: Release VS Code Extension

# This workflow builds and releases the ExcelMcp VS Code extension
# Triggered by pushing tags matching 'vscode-v*'

on:
  push:
    tags:
      - 'vscode-v*'

jobs:
  release-vscode-extension:
    runs-on: windows-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Update MCP Server Version
      run: |
        $tagName = "${{ github.ref_name }}"
        $version = $tagName -replace '^vscode-v', ''

        Write-Output "Updating MCP Server to version $version for bundled executable"

        # Update MCP Server project version
        $mcpCsprojPath = "src/ExcelMcp.McpServer/ExcelMcp.McpServer.csproj"
        $mcpContent = Get-Content $mcpCsprojPath -Raw
        $mcpContent = $mcpContent -replace '<Version>[\d\.]+</Version>', "<Version>$version</Version>"
        $mcpContent = $mcpContent -replace '<AssemblyVersion>[\d\.]+\.[\d\.]+</AssemblyVersion>', "<AssemblyVersion>$version.0</AssemblyVersion>"
        $mcpContent = $mcpContent -replace '<FileVersion>[\d\.]+\.[\d\.]+</FileVersion>', "<FileVersion>$version.0</FileVersion>"
        Set-Content $mcpCsprojPath $mcpContent

        Write-Output "Updated MCP Server project to version $version"
      shell: pwsh

    - name: Build Bundled MCP Server
      run: |
        Write-Output "Building self-contained MCP Server executable for Windows x64"
        
        # Ensure bin directory exists
        New-Item -ItemType Directory -Path "vscode-extension/bin" -Force
        
        # Publish self-contained executable
        dotnet publish src/ExcelMcp.McpServer/ExcelMcp.McpServer.csproj `
          -c Release `
          -r win-x64 `
          --self-contained `
          -o "vscode-extension/bin" `
          --verbosity minimal

        # Verify the executable was created
        $exePath = "vscode-extension/bin/Sbroenne.ExcelMcp.McpServer.exe"
        if (Test-Path $exePath) {
          $fileInfo = Get-Item $exePath
          Write-Output "✅ Created bundled executable: $($fileInfo.Name) ($([math]::Round($fileInfo.Length / 1MB, 2)) MB)"
        } else {
          Write-Error "❌ Failed to create bundled executable at $exePath"
          exit 1
        }
      shell: pwsh

    - name: Update Extension Version
      run: |
        TAG_NAME="${{ github.ref_name }}"
        VERSION="${TAG_NAME#vscode-v}"

        echo "Updating VS Code extension to version $VERSION"

        # Update package.json version
        cd vscode-extension
        npm version "$VERSION" --no-git-tag-version

        # Update CHANGELOG.md - replace the first version number and date
        DATE=$(date +%Y-%m-%d)
        sed -i "0,/## \[[0-9.]*\] - [0-9-]*/s//## [$VERSION] - $DATE/" CHANGELOG.md

        echo "Updated extension version to $VERSION"
        echo "Updated CHANGELOG.md to version $VERSION with date $DATE"
        echo "PACKAGE_VERSION=$VERSION" >> $GITHUB_ENV
      shell: bash

    - name: Install Dependencies
      run: |
        cd vscode-extension
        npm install

    - name: Compile TypeScript
      run: |
        cd vscode-extension
        npm run compile

    - name: Lint Extension
      run: |
        cd vscode-extension
        npm run lint || true

    - name: Package Extension
      run: |
        cd vscode-extension
        npx @vscode/vsce package --no-dependencies --allow-missing-repository

        VERSION="${{ env.PACKAGE_VERSION }}"
        VSIX_FILE="excelmcp-${VERSION}.vsix"

        # Rename if needed
        if [ -f "excelmcp-*.vsix" ]; then
          mv excelmcp-*.vsix "$VSIX_FILE"
        fi

        echo "Created $VSIX_FILE"
        ls -lh "$VSIX_FILE"
        echo "VSIX_PATH=vscode-extension/$VSIX_FILE" >> $GITHUB_ENV
      shell: bash

    - name: Publish to VS Code Marketplace
      uses: HaaLeo/publish-vscode-extension@v2
      with:
        pat: ${{ secrets.VSCE_TOKEN }}
        registryUrl: https://marketplace.visualstudio.com
        extensionFile: ${{ env.VSIX_PATH }}
      continue-on-error: true
      id: publishToMarketplace

    - name: Create GitHub Release
      run: |
        TAG_NAME="${{ github.ref_name }}"
        VERSION="${{ env.PACKAGE_VERSION }}"
        VSIX_FILE="${{ env.VSIX_PATH }}"

        # Check marketplace publishing results
        MARKETPLACE_STATUS="❌ Not published"

        if [ "${{ steps.publishToMarketplace.outcome }}" == "success" ]; then
          MARKETPLACE_STATUS="✅ Published to VS Code Marketplace"
        fi

        # Create release notes
        cat > release_notes.md << EOF
        ## ExcelMcp VS Code Extension $TAG_NAME

        ### One-Click Excel MCP Server Installation for VS Code

        This extension automatically registers the ExcelMcp MCP server with VS Code, enabling AI assistants like GitHub Copilot to control Microsoft Excel through 10 specialized tools.

        ### Installation Options

        **Option 1: VS Code Marketplace (Recommended)**
        - Search for "ExcelMcp" in VS Code Extensions
        - Click Install
        - Extension auto-installs .NET 8 runtime and includes bundled MCP server

        **Option 2: Manual VSIX Install**
        - Download \`excelmcp-${VERSION}.vsix\` below
        - In VS Code: \`Ctrl+Shift+P\` → "Install from VSIX"
        - Select the downloaded VSIX file

        ### Publishing Status

        - $MARKETPLACE_STATUS

        ### Key Features
        - ✅ **Zero Configuration** - Automatic MCP server registration
        - ✅ **Automatic .NET Installation** - Uses .NET Install Tool extension  
        - ✅ **Bundled MCP Server** - No separate tool installation required
        - ✅ **Works Everywhere** - All VS Code workspaces, no per-workspace config
        - ✅ **10 Excel Tools** - 108+ actions for Excel automation

        ### Excel Tools Available (108+ actions)

        1. **excel_powerquery** (11 actions) - Power Query M code management
        2. **excel_datamodel** (20 actions) - DAX measures & Data Model
        3. **table** (22 actions) - Excel Tables/ListObjects
        4. **excel_range** (30+ actions) - Range operations
        5. **excel_vba** (7 actions) - VBA macros
        6. **excel_connection** (11 actions) - Data connections
        7. **excel_worksheet** (5 actions) - Worksheet lifecycle
        8. **excel_parameter** (6 actions) - Named ranges
        9. **excel_file** (1 action) - File creation
        10. **excel_version** (1 action) - Update checking

        ### Requirements

        - **Windows OS** - Excel COM automation requires Windows
        - **Microsoft Excel 2016+** - Must be installed on your system
        - **.NET 8 Runtime** - **Automatically installed** by the extension
        - **VS Code 1.105.0+** - For MCP support

        ### Benefits vs Manual Configuration

        Before (Manual):
        - ❌ Install .NET 8 SDK manually
        - ❌ Run \`dotnet tool install\` command
        - ❌ Create \`.vscode/mcp.json\` manually
        - ❌ Error-prone JSON editing
        - ❌ Per-workspace setup

        After (Extension):
        - ✅ One-click install from Marketplace
        - ✅ .NET runtime auto-installed
        - ✅ MCP server bundled with extension
        - ✅ Works in all workspaces
        - ✅ Welcome message guides users

        ### Documentation

        - [Installation Guide](https://github.com/sbroenne/mcp-server-excel/blob/main/vscode-extension/INSTALL.md)
        - [Developer Guide](https://github.com/sbroenne/mcp-server-excel/blob/main/vscode-extension/DEVELOPMENT.md)
        - [Main Repository](https://github.com/sbroenne/mcp-server-excel)

        ### Package Details

        - **Size**: ~41 MB (includes bundled MCP server executable)
        - **Files**: Extension code + self-contained .NET 8 MCP server
        - **Dependencies**: ms-dotnettools.vscode-dotnet-runtime (auto-installs .NET 8)
        - **License**: MIT
        EOF

        # Create the release
        gh release create "$TAG_NAME" \
          "$VSIX_FILE" \
          --title "ExcelMcp VS Code Extension $TAG_NAME" \
          --notes-file release_notes.md

        echo "✅ Released ExcelMcp VS Code Extension $VERSION"
        echo "📦 Package: excelmcp-${VERSION}.vsix"
        echo "🔗 Release: https://github.com/sbroenne/mcp-server-excel/releases/tag/$TAG_NAME"
        echo "📊 Marketplace: $MARKETPLACE_STATUS"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      shell: bash
