name: Release CLI

on:
  push:
    tags:
      - 'cli-v*'

jobs:
  release-cli:
    runs-on: windows-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    - name: Update CLI Version
      run: |
        $tagName = "${{ github.ref_name }}"
        $version = $tagName -replace '^cli-v', ''

        Write-Output "Updating CLI to version $version"

        # Update CLI project version
        $cliCsprojPath = "src/ExcelMcp.CLI/ExcelMcp.CLI.csproj"
        $cliContent = Get-Content $cliCsprojPath -Raw
        $cliContent = $cliContent -replace '<Version>[\d\.]+</Version>', "<Version>$version</Version>"
        $cliContent = $cliContent -replace '<AssemblyVersion>[\d\.]+\.[\d\.]+</AssemblyVersion>', "<AssemblyVersion>$version.0</AssemblyVersion>"
        $cliContent = $cliContent -replace '<FileVersion>[\d\.]+\.[\d\.]+</FileVersion>', "<FileVersion>$version.0</FileVersion>"
        Set-Content $cliCsprojPath $cliContent

        Write-Output "Updated CLI version to $version"

        # Set environment variable for later steps
        echo "PACKAGE_VERSION=$version" >> $env:GITHUB_ENV
      shell: pwsh

    - name: Restore dependencies
      run: dotnet restore src/ExcelMcp.CLI/ExcelMcp.CLI.csproj

    - name: Build CLI
      run: dotnet build src/ExcelMcp.CLI/ExcelMcp.CLI.csproj --configuration Release --no-restore

    - name: Run CLI Tests (Unit only - no Excel or OnDemand tests)
      run: dotnet test tests/ExcelMcp.CLI.Tests --filter "Category=Unit&RunType!=OnDemand" --configuration Release --no-build

    - name: Create CLI Release Package
      run: |
        $version = $env:PACKAGE_VERSION

        # Create release directory structure
        New-Item -ItemType Directory -Path "release" -Force
        New-Item -ItemType Directory -Path "release/ExcelMcp-CLI-$version" -Force

        # Copy CLI files
        Copy-Item "src/ExcelMcp.CLI/bin/Release/net9.0/excelcli.exe" "release/ExcelMcp-CLI-$version/"
        Copy-Item "src/ExcelMcp.CLI/bin/Release/net9.0/excelcli.dll" "release/ExcelMcp-CLI-$version/"
        Copy-Item "src/ExcelMcp.CLI/bin/Release/net9.0/Sbroenne.ExcelMcp.Core.dll" "release/ExcelMcp-CLI-$version/"
        Copy-Item "src/ExcelMcp.CLI/bin/Release/net9.0/excelcli.runtimeconfig.json" "release/ExcelMcp-CLI-$version/"
        Copy-Item "src/ExcelMcp.CLI/bin/Release/net9.0/*.dll" "release/ExcelMcp-CLI-$version/" -Exclude "excelcli.dll", "Sbroenne.ExcelMcp.Core.dll"

        # Copy documentation
        Copy-Item "docs/CLI.md" "release/ExcelMcp-CLI-$version/README.md"
        Copy-Item "LICENSE" "release/ExcelMcp-CLI-$version/"
        Copy-Item "docs/COMMANDS.md" "release/ExcelMcp-CLI-$version/"

        # Create quick start guide
        $quickStartContent = "# ExcelMcp CLI v$version`n`n"
        $quickStartContent += "## Quick Start`n`n"
        $quickStartContent += "### Basic Usage`n"
        $quickStartContent += "``````powershell`n"
        $quickStartContent += "# Show help`n"
        $quickStartContent += ".\excelcli.exe`n`n"
        $quickStartContent += "# Create empty workbook`n"
        $quickStartContent += ".\excelcli.exe create-empty `"test.xlsx`"`n`n"
        $quickStartContent += "# List Power Queries`n"
        $quickStartContent += ".\excelcli.exe pq-list `"workbook.xlsx`"`n`n"
        $quickStartContent += "# Read worksheet data`n"
        $quickStartContent += ".\excelcli.exe sheet-read `"workbook.xlsx`" `"Sheet1`" `"A1:D10`"`n"
        $quickStartContent += "``````n`n"
        $quickStartContent += "### VBA Operations (One-time setup)`n"
        $quickStartContent += "``````powershell`n"
        $quickStartContent += "# Enable VBA trust (run once)`n"
        $quickStartContent += ".\excelcli.exe setup-vba-trust`n`n"
        $quickStartContent += "# Create macro-enabled workbook`n"
        $quickStartContent += ".\excelcli.exe create-empty `"macros.xlsm`"`n`n"
        $quickStartContent += "# List VBA modules`n"
        $quickStartContent += ".\excelcli.exe script-list `"macros.xlsm`"`n"
        $quickStartContent += "``````n`n"
        $quickStartContent += "## Documentation`n`n"
        $quickStartContent += "- **README.md** - Complete CLI documentation`n"
        $quickStartContent += "- **COMMANDS.md** - All 40+ command reference`n"
        $quickStartContent += "- **GitHub**: https://github.com/sbroenne/mcp-server-excel`n`n"
        $quickStartContent += "## Requirements`n`n"
        $quickStartContent += "- Windows OS with Microsoft Excel installed`n"
        $quickStartContent += "- .NET 9.0 runtime`n"
        $quickStartContent += "- Excel 2016+ (for COM interop)`n`n"
        $quickStartContent += "## Features`n`n"
        $quickStartContent += "- 40+ Excel automation commands`n"
        $quickStartContent += "- Power Query development tools`n"
        $quickStartContent += "- VBA development and execution`n"
        $quickStartContent += "- Worksheet data manipulation`n"
        $quickStartContent += "- Named range parameter management`n"
        $quickStartContent += "- Individual cell operations`n`n"
        $quickStartContent += "## License`n`n"
        $quickStartContent += "MIT License - see LICENSE file for details.`n"

        Set-Content "release/ExcelMcp-CLI-$version/QUICK-START.md" $quickStartContent

        # Create ZIP
        Compress-Archive -Path "release/ExcelMcp-CLI-$version/*" -DestinationPath "ExcelMcp-CLI-$version-windows.zip"

        Write-Output "Created ExcelMcp-CLI-$version-windows.zip"
      shell: pwsh

    - name: Create GitHub Release
      run: |
        $tagName = "${{ github.ref_name }}"
        $version = $env:PACKAGE_VERSION

        # Create release notes
        $releaseNotes = "## ExcelMcp CLI $tagName`n`n"
        $releaseNotes += "### Command-Line Interface for Excel Automation`n`n"
        $releaseNotes += "Direct command-line access to Excel operations for automation workflows, development, and CI/CD integration.`n`n"
        $releaseNotes += "### Key Features`n"
        $releaseNotes += "- 40+ Excel automation commands`n"
        $releaseNotes += "- Power Query development tools (M code management)`n"
        $releaseNotes += "- VBA development and macro execution`n"
        $releaseNotes += "- Worksheet data manipulation`n"
        $releaseNotes += "- Named range parameter management`n"
        $releaseNotes += "- Individual cell operations`n"
        $releaseNotes += "- CI/CD integration ready`n`n"
        $releaseNotes += "### Installation`n`n"
        $releaseNotes += "**Download Binary**`n"
        $releaseNotes += "1. Download ExcelMcp-CLI-$version-windows.zip`n"
        $releaseNotes += "2. Extract to your preferred directory`n"
        $releaseNotes += "3. See QUICK-START.md for usage examples`n`n"
        $releaseNotes += "### Command Categories`n"
        $releaseNotes += "- **File Operations** (2) - Create Excel workbooks (.xlsx, .xlsm)`n"
        $releaseNotes += "- **Power Query** (8) - M code management and data transformation`n"
        $releaseNotes += "- **VBA Scripts** (6) - Macro development and execution`n"
        $releaseNotes += "- **Worksheets** (9) - Data manipulation and sheet management`n"
        $releaseNotes += "- **Parameters** (5) - Named range configuration`n"
        $releaseNotes += "- **Cells** (4) - Individual cell operations`n`n"
        $releaseNotes += "### Quick Examples`n"
        $releaseNotes += "``````powershell`n"
        $releaseNotes += "# Basic operations`n"
        $releaseNotes += "excelcli.exe create-empty `"test.xlsx`"`n"
        $releaseNotes += "excelcli.exe pq-list `"workbook.xlsx`"`n"
        $releaseNotes += "excelcli.exe sheet-read `"workbook.xlsx`" `"Sheet1`" `"A1:D10`"`n`n"
        $releaseNotes += "# VBA operations (requires setup-vba-trust)`n"
        $releaseNotes += "excelcli.exe setup-vba-trust`n"
        $releaseNotes += "excelcli.exe script-list `"macros.xlsm`"`n"
        $releaseNotes += "excelcli.exe script-run `"macros.xlsm`" `"Module.Procedure`"`n"
        $releaseNotes += "``````n`n"
        $releaseNotes += "### Requirements`n"
        $releaseNotes += "- Windows OS with Microsoft Excel installed`n"
        $releaseNotes += "- .NET 9.0 runtime`n"
        $releaseNotes += "- Excel 2016+ (for COM interop)`n`n"
        $releaseNotes += "### Documentation`n"
        $releaseNotes += "- Complete Command Reference: COMMANDS.md in package`n"
        $releaseNotes += "- GitHub Repository: https://github.com/sbroenne/mcp-server-excel`n"
        $releaseNotes += "- CLI Documentation: docs/CLI.md`n`n"
        $releaseNotes += "### Related Tools`n"
        $releaseNotes += "- ExcelMcp MCP Server: For AI assistant integration`n"
        $releaseNotes += "- GitHub Copilot Integration: AI-assisted development workflows`n"

        # Create the release
        gh release create "$tagName" "ExcelMcp-CLI-$version-windows.zip" --title "ExcelMcp CLI $tagName" --notes $releaseNotes
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PACKAGE_VERSION: ${{ env.PACKAGE_VERSION }}
      shell: pwsh
