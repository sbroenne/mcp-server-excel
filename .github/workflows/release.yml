name: Release Combined

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: windows-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Update Version Numbers
      run: |
        $tagName = "${{ github.ref_name }}"
        $version = $tagName -replace '^v', ''
        
        # Update main CLI project version
        $csprojPath = "src/ExcelMcp.CLI/ExcelMcp.CLI.csproj"
        $content = Get-Content $csprojPath -Raw
        $content = $content -replace '<Version>[\d\.]+</Version>', "<Version>$version</Version>"
        $content = $content -replace '<AssemblyVersion>[\d\.]+</AssemblyVersion>', "<AssemblyVersion>$version.0</AssemblyVersion>"
        $content = $content -replace '<FileVersion>[\d\.]+</FileVersion>', "<FileVersion>$version.0</FileVersion>"
        Set-Content $csprojPath $content
        
        # Update MCP Server project version
        $mcpCsprojPath = "src/ExcelMcp.McpServer/ExcelMcp.McpServer.csproj"
        $mcpContent = Get-Content $mcpCsprojPath -Raw
        $mcpContent = $mcpContent -replace '<Version>[\d\.]+</Version>', "<Version>$version</Version>"
        $mcpContent = $mcpContent -replace '<AssemblyVersion>[\d\.]+</AssemblyVersion>', "<AssemblyVersion>$version.0</AssemblyVersion>"
        $mcpContent = $mcpContent -replace '<FileVersion>[\d\.]+</FileVersion>', "<FileVersion>$version.0</FileVersion>"
        Set-Content $mcpCsprojPath $mcpContent
        
        # Also update Directory.Build.props
        $buildPropsPath = "Directory.Build.props"
        $buildContent = Get-Content $buildPropsPath -Raw
        $buildContent = $buildContent -replace '<Version>[\d\.]+</Version>', "<Version>$version</Version>"
        $buildContent = $buildContent -replace '<AssemblyVersion>[\d\.]+</AssemblyVersion>', "<AssemblyVersion>$version.0</AssemblyVersion>"
        $buildContent = $buildContent -replace '<FileVersion>[\d\.]+</FileVersion>', "<FileVersion>$version.0</FileVersion>"
        Set-Content $buildPropsPath $buildContent
        
        Write-Output "Updated version to $version for CLI and MCP Server"
      shell: pwsh
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build Release
      run: dotnet build --configuration Release --no-restore
      
    - name: Create Release Package
      run: |
        $tagName = "${{ github.ref_name }}"
        $version = $tagName -replace '^v', ''
        
        # Create release directory structure
        New-Item -ItemType Directory -Path "release" -Force
        New-Item -ItemType Directory -Path "release/ExcelMcp-$version" -Force
        New-Item -ItemType Directory -Path "release/ExcelMcp-$version/CLI" -Force
        New-Item -ItemType Directory -Path "release/ExcelMcp-$version/MCP-Server" -Force
        
        # Copy CLI files
        Copy-Item "src/ExcelMcp.CLI/bin/Release/net8.0/ExcelMcp.CLI.exe" "release/ExcelMcp-$version/CLI/"
        Copy-Item "src/ExcelMcp.CLI/bin/Release/net8.0/ExcelMcp.CLI.dll" "release/ExcelMcp-$version/CLI/"
        Copy-Item "src/ExcelMcp.CLI/bin/Release/net8.0/ExcelMcp.Core.dll" "release/ExcelMcp-$version/CLI/"
        Copy-Item "src/ExcelMcp.CLI/bin/Release/net8.0/ExcelMcp.CLI.runtimeconfig.json" "release/ExcelMcp-$version/CLI/"
        Copy-Item "src/ExcelMcp.CLI/bin/Release/net8.0/Spectre.Console.dll" "release/ExcelMcp-$version/CLI/"
        
        # Copy MCP Server files
        Copy-Item "src/ExcelMcp.McpServer/bin/Release/net8.0/*" "release/ExcelMcp-$version/MCP-Server/" -Recurse
        
        # Copy documentation
        Copy-Item "README.md" "release/ExcelMcp-$version/"
        Copy-Item "LICENSE" "release/ExcelMcp-$version/"
        Copy-Item "docs/COMMANDS.md" "release/ExcelMcp-$version/"
        Copy-Item "src/ExcelMcp.McpServer/README.md" "release/ExcelMcp-$version/MCP-Server-README.md"
        
        # Create installation README
        $installReadme = "# ExcelMcp v$version`n`n## CLI Tools`nLocation: CLI/`nUsage: ExcelMcp.CLI.exe --help`n`n## MCP Server`nLocation: MCP-Server/`nUsage: dotnet MCP-Server/ExcelMcp.McpServer.dll`n`nSee README.md and MCP-Server-README.md for complete documentation."
        Set-Content "release/ExcelMcp-$version/INSTALL.md" $installReadme
        
        # Create ZIP
        Compress-Archive -Path "release/ExcelMcp-$version/*" -DestinationPath "ExcelMcp-$version-windows.zip"
        
        Write-Output "Created ExcelMcp-$version-windows.zip with CLI and MCP Server"
      shell: pwsh
      
    - name: Create Release with GitHub CLI
      run: |
        $tagName = "${{ github.ref_name }}"
        $version = $tagName -replace '^v', ''
        
        # Create release notes
        $releaseNotes = @"
        ## ExcelMcp $tagName
        
        ### üÜï What's New
        - **MCP Server**: Model Context Protocol server for AI assistant integration
        - **GitHub Copilot Ready**: Built for AI-assisted Excel development workflows
        - **Development Focus**: Power Query refactoring and VBA enhancement
        - Enhanced error handling and diagnostics
        - Complete Power Query, worksheet, and VBA automation
        
        ### üì¶ Package Contents
        - **CLI/**: Command-line tools (ExcelMcp.exe)
        - **MCP-Server/**: MCP server for AI assistants
        - Documentation: README.md, MCP-Server-README.md, COMMANDS.md
        
        ### üöÄ Installation
        
        **Option 1: Download Binary**
        1. Download ``ExcelMcp-$version-windows.zip``
        2. Extract to your preferred directory
        3. See INSTALL.md for setup instructions
        
        **Option 2: NuGet Package (.NET Tool)**
        ``````
        dotnet tool install --global ExcelMcp.McpServer --version $version
        ``````
        
        ### üíª CLI Usage
        ``````
        CLI/ExcelMcp.CLI.exe --version
        CLI/ExcelMcp.CLI.exe pq-list "workbook.xlsx"
        CLI/ExcelMcp.CLI.exe pq-view "workbook.xlsx" "QueryName"
        CLI/ExcelMcp.CLI.exe sheet-read "workbook.xlsx" "Sheet1" "A1:D10"
        ``````
        
        ### üß† MCP Server Usage  
        ``````
        # From binary
        dotnet MCP-Server/ExcelMcp.McpServer.dll
        
        # From .NET tool
        mcp-excel
        ``````
        
        ### üéØ Development Features
        - **Power Query Development**: M code refactoring with AI assistance
        - **VBA Enhancement**: Error handling and code quality improvements
        - **Code Review**: AI-powered analysis of Excel automation code
        - **Version Control**: Export/import for Git workflows
        - **Testing**: Automated Excel development workflows
        
        ### ‚öôÔ∏è Requirements
        - Windows OS with Microsoft Excel installed
        - .NET 8.0 runtime
        "@
        
        # Create the release
        gh release create "$tagName" "ExcelMcp-$version-windows.zip" --title "ExcelMcp $tagName" --notes $releaseNotes
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      shell: pwsh