name: Build CLI

permissions:
  contents: read

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/ExcelMcp.CLI/**'
      - 'src/ExcelMcp.Core/**'
      - 'tests/ExcelMcp.CLI.Tests/**'
      - 'global.json'
      - 'Directory.Build.props'
      - 'Directory.Packages.props'
      - '.github/workflows/build-cli.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/ExcelMcp.CLI/**'
      - 'src/ExcelMcp.Core/**'
      - 'tests/ExcelMcp.CLI.Tests/**'
      - 'global.json'
      - 'Directory.Build.props'
      - 'Directory.Packages.props'
      - '.github/workflows/build-cli.yml'

jobs:
  build-cli:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 10.0.x
        
    - name: Restore dependencies
      run: dotnet restore src/ExcelMcp.CLI/ExcelMcp.CLI.csproj
      
    - name: Build CLI
      run: dotnet build src/ExcelMcp.CLI/ExcelMcp.CLI.csproj --no-restore --configuration Release
      
    - name: Verify CLI build
      run: |
        # Check Sbroenne.ExcelMcp.CLI main executable
        if (Test-Path "src/ExcelMcp.CLI/bin/Release/net10.0/Sbroenne.ExcelMcp.CLI.exe") {
          Write-Output "‚úÖ Sbroenne.ExcelMcp.CLI.exe built successfully"
          $version = (Get-Item "src/ExcelMcp.CLI/bin/Release/net10.0/Sbroenne.ExcelMcp.CLI.exe").VersionInfo.FileVersion
          Write-Output "Version: $version"
          
          # Test CLI help command
          $helpOutput = & "src/ExcelMcp.CLI/bin/Release/net10.0/Sbroenne.ExcelMcp.CLI.exe" --help
          if ($helpOutput -match "ExcelMcp.CLI - Excel Command Line Interface") {
            Write-Output "‚úÖ CLI help command working"
          } else {
            Write-Warning "‚ö†Ô∏è CLI help command may have issues"
          }
        } else {
          Write-Error "‚ùå Sbroenne.ExcelMcp.CLI.exe not found"
          exit 1
        }
        
        Write-Output "üîß CLI tool ready for direct automation"
      shell: pwsh
      
    - name: Test CLI (requires Excel)
      run: |
        Write-Output "‚ÑπÔ∏è Note: CLI tests skipped in CI - they require Microsoft Excel"
        Write-Output "   Run 'dotnet test tests/ExcelMcp.CLI.Tests/' locally with Excel installed"
      shell: pwsh
        
    - name: Upload CLI build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ExcelMcp-CLI-${{ github.sha }}
        path: src/ExcelMcp.CLI/bin/Release/net10.0/