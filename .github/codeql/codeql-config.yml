# CodeQL Configuration for ExcelMcp
# Defines security scanning rules and exclusions
# Version: 2.0 - Updated 2025-10-24 to clear stale alerts

name: "ExcelMcp CodeQL Configuration v2.0"

# Disable default query suite and use custom ones
disable-default-queries: false

# Query packs to run
queries:
  # Built-in security queries
  - uses: security-and-quality
  - uses: security-extended

# Paths to exclude from analysis
paths-ignore:
  - '**/bin/**'
  - '**/obj/**'
  - '**/packages/**'
  - '**/.nuget/**'
  - '**/node_modules/**'
  - '**/*.Designer.cs'
  - '**/*.g.cs'
  - '**/*.g.i.cs'
  - '**/AssemblyInfo.cs'
  - '**/TemporaryGeneratedFile_*.cs'

# Paths to explicitly include
paths:
  - 'src/**'
  - 'tests/**'

# Query filters
query-filters:
  # Exclude specific queries that may be false positives
  # Uncomment and adjust as needed

  # COM interop may trigger weak crypto warnings for Excel automation
  - exclude:
      id: cs/weak-crypto
      reason: "Excel COM interop uses Windows crypto APIs"

  # Dynamic typing is required for COM interop
  - exclude:
      id: cs/call-to-unmanaged-code
      reason: "Required for Excel COM interop automation"

  # External libraries may use reflection
  - exclude:
      id: cs/reflection
      reason: "External libraries may use reflection"

  # GC.Collect is required for COM interop cleanup
  - exclude:
      id: cs/call-to-gc
      reason: "Explicit GC.Collect() required for COM object cleanup in Excel automation. See COM cleanup pattern in ExcelBatch/ExcelSession."
      paths:
        - 'src/ExcelMcp.ComInterop/Session/**'
        - 'tests/**/Session/**'

  # Test-specific exclusions (note-severity only)
  # Tests often use patterns that are acceptable in test context

  # COMException catch is as specific as possible for COM interop
  - exclude:
      id: cs/catch-of-all-exceptions
      reason: "COMException is the most specific exception for Excel COM interop. No more specific types available."
      paths:
        - 'src/**/DataModel/**'

  # Generic Exception catch in test helpers is acceptable with explanatory comments
  - exclude:
      id: cs/catch-of-all-exceptions
      reason: "Test helper methods document why broad catch is needed (registry access, Excel validation, etc.)"
      paths:
        - 'tests/**/Helpers/**'
        - 'tests/**/Fixtures/**'

  # Empty catch blocks in COM cleanup code - intentionally ignore failures during resource release
  - exclude:
      id: cs/empty-catch-block
      reason: "COM cleanup code intentionally ignores failures during Marshal.ReleaseComObject and Dispose. Preventing exceptions during cleanup is critical for Excel automation."
      paths:
        - 'src/ExcelMcp.ComInterop/**'
        - 'src/ExcelMcp.Core/Commands/**'
        - 'src/ExcelMcp.CLI/Commands/**'
        - 'src/ExcelMcp.McpServer/Tools/**'
        - 'tests/**'

  # Path.Combine has been replaced with Path.Join across the codebase
  # No exclusions needed - all instances fixed

  # LINQ suggestions in tests are optional
  - exclude:
      id: cs/linq/missed-where
      reason: "Test code readability over performance"
      paths:
        - 'tests/**'

  # Code quality suggestions that are acceptable in COM interop context
  - exclude:
      id: cs/nested-if-statements
      reason: "COM interop requires careful null checking and type validation with nested conditions"
      paths:
        - 'src/ExcelMcp.Core/Commands/**'
        - 'src/ExcelMcp.ComInterop/**'

  - exclude:
      id: cs/invalid-dynamic-call
      reason: "Dynamic calls required for Excel COM interop - CodeQL cannot validate COM object signatures"
      paths:
        - 'src/**'

  - exclude:
      id: cs/missed-ternary-operator
      reason: "Explicit if/else preferred for clarity in COM interop code"
      paths:
        - 'src/**'

  - exclude:
      id: cs/dereferenced-value-may-be-null
      reason: "COM objects validated through try/catch patterns rather than null checks"
      paths:
        - 'src/**'

  - exclude:
      id: cs/useless-upcast
      reason: "Explicit casts sometimes required for COM interop type resolution"
      paths:
        - 'src/**'

  - exclude:
      id: cs/linq/missed-select
      reason: "Explicit loops preferred for clarity in test code and COM iteration"

  - exclude:
      id: cs/simplifiable-boolean-expression
      reason: "Explicit boolean expressions preferred for clarity in COM validation logic"

  - exclude:
      id: cs/unmanaged-code
      reason: "COM interop requires unmanaged code calls to Excel automation interfaces"

  - exclude:
      id: cs/useless-tostring-call
      reason: "Explicit ToString() sometimes needed for COM object string conversion"

  # Ternary operator suggestions in tests
  - exclude:
      id: cs/missed-ternary-operator
      reason: "Test code clarity over brevity"
      paths:
        - 'tests/**'

  # Useless assignments are legitimate in test setup for clarity/debugging
  # Already fixed: using statements no longer use discard variables
  - exclude:
      id: cs/useless-assignment-to-local
      reason: "Test setup may assign variables for clarity even if unused"
      paths:
        - 'tests/**/Fixtures/**'
        - 'tests/**/Helpers/**'

# External data sources (for taint tracking)
# external-repository-token: ${{ secrets.GITHUB_TOKEN }}

# ML-powered alerts (experimental)
ml-powered-queries: true

# Trap caching for faster subsequent runs
trap-caching: true

# Build mode for compiled languages
# build-mode: 'manual' for custom build commands

# Additional configuration
packs:
  csharp:
    - codeql/csharp-queries
    - codeql/csharp-all

# Security policy
security-policy:
  # Severity levels to report
  minimum-severity: medium

  # Report on security findings
  fail-on-severity: high

  # License compliance
  check-licenses: true
